import { isArray } from '@antv/util';
import { boundTest } from '../utils/helper';
export default function adjustAngle(labels, overlapCfg, cfg, utils) {
    var _a = overlapCfg.optionalAngles, optionalAngles = _a === void 0 ? [0, 45, 90] : _a, margin = overlapCfg.margin, _b = overlapCfg.recoverWhenFailed, recoverWhenFailed = _b === void 0 ? true : _b;
    var defaultAngles = labels.map(function (label) { return label.getLocalEulerAngles(); });
    var runAndPassed = function () {
        var res = boundTest(labels, margin).length < 1;
        return res;
    };
    var setLabelsRotate = function (angle) {
        return labels.forEach(function (label, index) {
            var rotate = isArray(angle) ? angle[index] : angle;
            utils.rotate(label, +rotate);
        });
    };
    for (var i = 0; i < optionalAngles.length; i++) {
        setLabelsRotate(optionalAngles[i]);
        if (runAndPassed())
            return;
    }
    recoverWhenFailed && setLabelsRotate(defaultAngles);
}
//# sourceMappingURL=autoRotate.js.map